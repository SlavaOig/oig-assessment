@inherits LayoutComponentBase
@inject AuthService AuthService
@inject NavigationManager Navigation

<RedirectIfNotAuthenticated/>

<BlazorBootstrapLayout StickyHeader="true">



    <HeaderSection>
        <button type="submit" class="btn btn-secondary" @onclick="LogOut">Log out</button>

        <ThemeSwitcher Class="ps-3 ps-lg-2" />
    </HeaderSection>

    <SidebarSection>
        <Sidebar2 Href="/"
        ImageSrc="https://demos.blazorbootstrap.com/images/logo/logo-white.svg"
        Title="Blazor Bootstrap"
        BadgeText="3.3.1"
        DataProvider="Sidebar2DataProvider"
        WidthUnit="Unit.Px" />
    </SidebarSection>

    <ContentSection>
        @Body
    </ContentSection>
</BlazorBootstrapLayout>



<Preload/>

@code {
    private IEnumerable<NavItem> navItems = default!;

    private async Task<Sidebar2DataProviderResult> Sidebar2DataProvider(Sidebar2DataProviderRequest request)
    {
        if (navItems is null)
            navItems = GetNavItems();

        return await Task.FromResult(request.ApplyTo(navItems));
    }

    private IEnumerable<NavItem> GetNavItems()
    {
        navItems = new List<NavItem>
        {
            new NavItem { Id = "1", Href = "/", IconName = BlazorBootstrap.IconName.HouseDoorFill, Text = "Home", Match=NavLinkMatch.All},
            new NavItem { Id = "3", Href = "/surveys", IconName = BlazorBootstrap.IconName.PatchQuestionFill, Text = "Surveys"},
            new NavItem { Id = "2", Href = "/survey-users", IconName = BlazorBootstrap.IconName.PeopleFill, Text = "Users"}
        };

        return navItems;
    }

    private async Task LogOut()
    {
        await AuthService.LogoutAsync();

        Navigation.NavigateTo("/login");
    }
}